#!/usr/bin/env node

/*
Configuration below use code from https://pugjs.org/api/getting-started.html
*/

const fs = require('fs'),
    mkdirp = require('mkdirp'),
    dir = require('path').dirname,
    pug = require('pug');

const pagePath  = 'app/pages/',
      rendePath = 'webroot/'

const configs = [{ // ------------------------------------------------ home page
    path: pagePath + 'home.pug',
    render: {
        path: rendePath + 'index.html'
    },
    variables: {}
}, { // -------------------------------------------------------------- dashboard
    path: pagePath + 'dashboard.pug',
    render: {
        path: rendePath + 'dashboard/index.html'
    },
    variables: {}
}, { // ------------------------------------------------------ quick test page 1
    path: pagePath + 'test.pug',
    render: {
        path: rendePath + 'test/1/index.html'
    },
    variables: {
        firstHeader: 'Test rapide',
        next: '/test/2',
        questionNumber: '1',
        domain: 'HTML5',
        question:   "Comment vérifiez l'intégrité d'un script inséré à l'aide de la valise <script src=\"..\"> ?",
        answers: [
            "Utiliser un attribut integrity",
            "Lire le script et vérifier que c'est correct",
            "Appeler un ami !"
        ]
    }
}, { // ------------------------------------------------------ quick test page 2
    path: pagePath + 'test.pug',
    render: {
        path: rendePath + 'test/2/index.html'
    },
    variables: {
        firstHeader: 'Test rapide',
        next: '/dashboard',
        questionNumber: '2',
        domain: 'CSS3',
        question: "Est-il possible d'utiliser des variables globales en CSS3 ?",
        answers: [
            "Oui",
            "Peut-être",
            "Non",
            "Tabarnak, le web s'est fait pas pour moi !"
        ]
    }
}, { // ------------------------------------------------------------ exam page 1
    path: pagePath + 'test.pug',
    render: {
        path: rendePath + 'exam/1/index.html'
    },
    variables: {
        firstHeader: 'Examen',
        next: '/exam/2',
        questionNumber: '1',
        domain: 'HTML5',
        question:   "Question 1/2: Comment vérifiez l'intégrité d'un script inséré à l'aide de la valise <script src=\"..\"> ?",
        answers: [
            "Use integrity attribute",
            "Read the script and check if it’s good",
            "Call a friend"
        ]
    }
}, { // ------------------------------------------------------------ exam page 2
    path: pagePath + 'test.pug',
    render: {
        path: rendePath + 'exam/2/index.html'
    },
    variables: {
        firstHeader: 'Examen',
        next: '/result',
        questionNumber: '2',
        domain: 'CSS3',
        question: "Question 2/2: Est-il possible d'utiliser des variables globales en CSS3 ?",
        answers: [
            "Oui",
            "Peut-être",
            "Non",
            "Tabarnak, le web c'est pas fait pour moi !"
        ]
    }
}, { // ----------------------------------------------------------------- result
    path: pagePath + 'result.pug',
    render: {
        path: rendePath + 'result/index.html'
    },
    variables: {}
}, { // ----------------------------------------------------------------- result
    path: pagePath + 'instructions.pug',
    render: {
        path: rendePath + 'instructions/index.html'
    },
    variables: {}
}]

/*
Help from http://stackoverflow.com/questions/16316330/how-to-write-file-if-parent-folder-doesnt-exist#16317628
*/
function writeFile(path, contents, callback) {
    mkdirp(dir(path), function(err) {
        if (err) return callback(err);

        fs.writeFile(path, contents, callback);
    });
}

for (page of configs) {
    // ------------------------------------------------------------------ Render
    var opt = Object.assign(page.variables, {
        pretty: true
    });
    var render = pug.renderFile(page.path, opt);

    // -------------------------------------------------------------- Write file
    /*
    Help from http://stackoverflow.com/questions/2496710/writing-files-in-node-js
    */
    writeFile(page.render.path, render, function(err) {
        if (err) {
            return console.error(err);
        }
    });
}
console.log('Built successfully');
